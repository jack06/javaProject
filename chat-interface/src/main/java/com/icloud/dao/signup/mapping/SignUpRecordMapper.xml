<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icloud.dao.signup.SignUpRecordMapper">
	<resultMap id="BaseResultMap" type="com.icloud.model.signup.SignUpRecord">
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="nick" jdbcType="VARCHAR" property="nick" />
		<result column="header_img" jdbcType="VARCHAR" property="headerImg" />
		<result column="signup_config_id" jdbcType="VARCHAR" property="signUpConfigId" />
		<result column="signup_user_id" jdbcType="VARCHAR" property="signUpUserId" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="name" jdbcType="VARCHAR" property="name" />
	
	</resultMap>

	<sql id="Base_Column_List">
		id, create_time,nick,header_img,signup_config_id,signup_user_id,phone,email,name
	</sql>

	<delete id="deleteByKey" parameterType="String">
		delete from t_signup_record
		where id=${id}
	</delete>

	<insert id="save" parameterType="com.icloud.model.signup.SignUpRecord">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into t_signup_record (id, create_time,nick,header_img,signup_config_id,signup_user_id,phone,email,name) values
		(#{id,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{nick,jdbcType=VARCHAR},#{headerImg,jdbcType=VARCHAR},#{signUpConfigId,jdbcType=VARCHAR},#{signUpUserId,jdbcType=VARCHAR}
		,#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR})
	</insert>

	<update id="update" parameterType="com.icloud.model.signup.SignUpRecord">
		
	</update>

	<select id="findForObject" parameterType="String" resultMap="BaseResultMap">
		select t.* from t_signup_record t where t.id=#{id}
	</select>
   
    <select id="findByUser" parameterType="com.icloud.model.signup.SignUpRecord" resultMap="BaseResultMap">
		select * from t_signup_record where signUp_user_id=#{signUpUserId} and signup_config_id=#{signUpConfigId}
	</select>
   
    <select id="findForList" parameterType="com.icloud.model.signup.SignUpRecord" resultMap="BaseResultMap">
       select * from t_signup_record 
      <where>
			<if test="signUpConfigId != null">
				and signup_config_id = #{signUpConfigId,jdbcType=VARCHAR}
			</if>
		</where>
    </select>
    
    <select id="findCount" parameterType="com.icloud.model.signup.SignUpRecord" resultType="Integer">
       select count(1) from t_signup_record
      <where>
			<if test="signUpConfigId != null">
			and	signup_config_id = #{signUpConfigId,jdbcType=VARCHAR}
			</if>
		</where>
    </select>

   
</mapper>