<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icloud.dao.questions.QuestionOptionsMapper" >
  <resultMap id="BaseResultMap" type="com.icloud.model.questions.QuestionOptions" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="question_id" property="questionId" jdbcType="VARCHAR" />
    <result column="options_content" property="optionsContent" jdbcType="VARCHAR" />
    <result column="is_correct" property="isCorrect" jdbcType="VARCHAR" />
    <result column="questionnaire_id" property="questionnaireId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, question_id, options_content, is_correct, questionnaire_id
  </sql>
  
  <sql id="Example_Where_Clause">   
  <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  
   <select id="selectByExample" parameterType="com.icloud.common.QueryBuilder" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_question_options
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  
    <select id="countByExample" parameterType="com.icloud.common.QueryBuilder" resultType="java.lang.Long">
    select count(*) from t_question_options
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByQuestion" parameterType="String" resultMap="BaseResultMap">
     select
     <include refid="Base_Column_List" />
    from t_question_options where question_id=#{questionId}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_question_options
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_question_options
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByModule" parameterType="String">
   delete from t_question_options
    where  questionnaire_id=#{questionnaireId}
  </delete>
  
  <insert id="insert" parameterType="com.icloud.model.questions.QuestionOptions" >
  <selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
	</selectKey>
    insert into t_question_options (id, question_id, options_content, 
      is_correct, questionnaire_id)
    values (#{id,jdbcType=VARCHAR}, #{questionId,jdbcType=VARCHAR}, #{optionsContent,jdbcType=VARCHAR}, 
      #{isCorrect,jdbcType=VARCHAR}, #{questionnaireId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.icloud.model.questions.QuestionOptions" >
    insert into t_question_options
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="optionsContent != null" >
        options_content,
      </if>
      <if test="isCorrect != null" >
        is_correct,
      </if>
      <if test="questionnaireId != null" >
        questionnaire_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="optionsContent != null" >
        #{optionsContent,jdbcType=VARCHAR},
      </if>
      <if test="isCorrect != null" >
        #{isCorrect,jdbcType=VARCHAR},
      </if>
      <if test="questionnaireId != null" >
        #{questionnaireId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.icloud.model.questions.QuestionOptions" >
    update t_question_options
    <set >
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="optionsContent != null" >
        options_content = #{optionsContent,jdbcType=VARCHAR},
      </if>
      <if test="isCorrect != null" >
        is_correct = #{isCorrect,jdbcType=VARCHAR},
      </if>
      <if test="questionnaireId != null" >
        questionnaire_id = #{questionnaireId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icloud.model.questions.QuestionOptions" >
    update t_question_options
    set question_id = #{questionId,jdbcType=VARCHAR},
      options_content = #{optionsContent,jdbcType=VARCHAR},
      is_correct = #{isCorrect,jdbcType=VARCHAR},
      questionnaire_id = #{questionnaireId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>