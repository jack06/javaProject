<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icloud.dao.evaluate.EvaluationConfigMapper">
	<resultMap id="BaseResultMap" type="com.icloud.model.evaluate.EvaluationConfig">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="event_id" property="eventId" jdbcType="VARCHAR" />
		<result column="is_open" property="isOpen" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="is_allow_type" property="isAllowType" jdbcType="VARCHAR" />
		<result column="model" property="model" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, event_id, is_open, start_time, end_time, is_allow_type, model
	</sql>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="selectByExample" parameterType="com.icloud.common.QueryBuilder"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from t_evaluation_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="countByExample" parameterType="com.icloud.common.QueryBuilder"
		resultType="java.lang.Long">
		select count(*) from t_evaluation_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_evaluation_config
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from t_evaluation_config
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.icloud.model.evaluate.EvaluationConfig">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into t_evaluation_config (id, event_id, is_open,
		start_time, end_time, is_allow_type,
		model)
		values (#{id,jdbcType=VARCHAR}, #{eventId,jdbcType=VARCHAR},
		#{isOpen,jdbcType=VARCHAR},
		#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{isAllowType,jdbcType=VARCHAR},
		#{model,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.icloud.model.evaluate.EvaluationConfig">
		insert into t_evaluation_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="eventId != null">
				event_id,
			</if>
			<if test="isOpen != null">
				is_open,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="isAllowType != null">
				is_allow_type,
			</if>
			<if test="model != null">
				model,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="eventId != null">
				#{eventId,jdbcType=VARCHAR},
			</if>
			<if test="isOpen != null">
				#{isOpen,jdbcType=VARCHAR},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isAllowType != null">
				#{isAllowType,jdbcType=VARCHAR},
			</if>
			<if test="model != null">
				#{model,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.icloud.model.evaluate.EvaluationConfig">
		update t_evaluation_config
		<set>
			<if test="eventId != null">
				event_id = #{eventId,jdbcType=VARCHAR},
			</if>
			<if test="isOpen != null">
				is_open = #{isOpen,jdbcType=VARCHAR},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isAllowType != null">
				is_allow_type = #{isAllowType,jdbcType=VARCHAR},
			</if>
			<if test="model != null">
				model = #{model,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.icloud.model.evaluate.EvaluationConfig">
		update t_evaluation_config
		set event_id = #{eventId,jdbcType=VARCHAR},
		is_open = #{isOpen,jdbcType=VARCHAR},
		start_time = #{startTime,jdbcType=TIMESTAMP},
		end_time = #{endTime,jdbcType=TIMESTAMP},
		is_allow_type = #{isAllowType,jdbcType=VARCHAR},
		model = #{model,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>